{"remainingRequest":"D:\\VS CODE Hasil\\kantinKuh\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\VS CODE Hasil\\kantinKuh\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\VS CODE Hasil\\kantinKuh\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\VS CODE Hasil\\kantinKuh\\src\\views\\Foods.vue?vue&type=template&id=1251538b&","dependencies":[{"path":"D:\\VS CODE Hasil\\kantinKuh\\src\\views\\Foods.vue","mtime":1635834759797},{"path":"D:\\VS CODE Hasil\\kantinKuh\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635820026540},{"path":"D:\\VS CODE Hasil\\kantinKuh\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1635820047088},{"path":"D:\\VS CODE Hasil\\kantinKuh\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635820026540},{"path":"D:\\VS CODE Hasil\\kantinKuh\\node_modules\\vue-loader\\lib\\index.js","mtime":1635820041458}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}